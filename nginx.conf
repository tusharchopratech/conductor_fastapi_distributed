worker_processes 1;

events {
    worker_connections 1024;
}

http {
    access_log off;
    upstream order_server {
        server order:80; # 'webapp' is the service name, Docker's internal DNS resolves it
        # Docker Compose automatically adds multiple instances to the service name
        # so 'webapp' will resolve to multiple IPs if scaled.
    }
    server {
        listen 80;
        location / {
            proxy_pass http://order_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    upstream warehouse_server {
        server warehouse:80;
    }
    server {
        listen 81;
        location / {
            proxy_pass http://warehouse_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

}